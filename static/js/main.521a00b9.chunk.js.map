{"version":3,"sources":["containers/App.module.css","components/Cockpit/Cockpit.module.css","components/FancyButton/FancyButton.module.css","components/Persons/Person/Person.module.css","components/AuthContext/AuthContext.js","hoc/Auxillary.js","components/FancyButton/FancyButton.js","components/Cockpit/Cockpit.js","components/Persons/Person/Person.js","components/Persons/Persons.js","containers/App.js","serviceWorker.js","index.js"],"names":["module","exports","App","D-flex-c","Red","Bigger","btn","Green","Orange","Black","Person","AuthContext","React","createContext","authenticated","handler","Aux","props","children","classes","classLister","styles","FancyButton","forwardRef","ref","className","rest","Object","objectWithoutProperties","react_default","a","createElement","assign","memo","btnClass","numOfPersons","persons","length","showPersons","pClass","push","Auxillary","title","FancyButton_FancyButton","onClick","toggleShowPersons","AuthContext_AuthContext","Consumer","_ref","loginClass","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","console","log","position","focusInput","inputElement","current","focus","componentDidUpdate","nextProps","nextState","nextContext","createRef","clicked","name","age","context","type","onChange","changed","value","Component","contextType","Persons","personRef","_this2","map","person","index","Persons_Person_Person","key","id","evt","state","toggleClickedCount","isAuthenticated","nameChangedHandler","personIndex","findIndex","p","objectSpread","target","newPersons","toConsumableArray","slice","concat","setState","prevState","deletePersonHandler","toggleLoginHandler","components_Persons_Persons","Provider","Cockpit","PureComponent","Boolean","window","location","hostname","match","ReactDOM","render","containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.521a00b9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2ezK2\",\"D-flex-c\":\"App_D-flex-c__3yx8Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Red\":\"Cockpit_Red__3G4IL\",\"Bigger\":\"Cockpit_Bigger__OsfZo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FancyButton_btn__p7-2P\",\"Green\":\"FancyButton_Green__2kNlr\",\"Orange\":\"FancyButton_Orange__quC8N\",\"Red\":\"FancyButton_Red__3QP3F\",\"Black\":\"FancyButton_Black__2Ec1n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Person\":\"Person_Person__2Rq-e\"};","import React from 'react';\r\n\r\nconst AuthContext = React.createContext({\r\n  authenticated: false,\r\n  handler: () => {},\r\n});\r\n\r\nexport default AuthContext;\r\n","const Aux = props => props.children;\r\n\r\nexport default Aux;\r\n","import React from 'react';\r\nimport classLister from 'css-module-class-lister';\r\nimport styles from './FancyButton.module.css';\r\n\r\nconst classes = classLister(styles);\r\n\r\nconst FancyButton = React.forwardRef((props, ref) => {\r\n  const { children, className, ...rest } = props;\r\n  return (\r\n    <button className={classes('btn', className)} {...rest} ref={ref}>\r\n      {children}\r\n    </button>\r\n  );\r\n});\r\n\r\nexport default FancyButton;\r\n","import React from 'react';\r\nimport classLister from 'css-module-class-lister';\r\nimport styles from './Cockpit.module.css';\r\nimport AuthContext from '../AuthContext/AuthContext';\r\nimport Aux from '../../hoc/Auxillary';\r\nimport FancyButton from '../FancyButton/FancyButton';\r\n\r\nconst classes = classLister(styles);\r\n\r\nconst cockpit = props => {\r\n  let btnClass = '';\r\n  const numOfPersons = props.persons.length;\r\n  if (props.showPersons) {\r\n    if (numOfPersons < 1) {\r\n      btnClass = 'Black';\r\n    } else if (numOfPersons < 2) {\r\n      btnClass = 'Red';\r\n    } else if (numOfPersons < 3) {\r\n      btnClass = 'Orange';\r\n    } else {\r\n      btnClass = 'Green';\r\n    }\r\n  }\r\n  let pClass = [];\r\n  props.persons.length <= 1 && pClass.push('Red');\r\n  props.persons.length <= 0 && pClass.push('Bigger');\r\n\r\n  return (\r\n    <Aux>\r\n      <h1>{props.title}</h1>\r\n      <p className={classes(pClass)}>This is really working!!!</p>\r\n      <div>\r\n        <FancyButton className={btnClass} onClick={props.toggleShowPersons}>\r\n          Toggle Persons!\r\n        </FancyButton>\r\n        <AuthContext.Consumer>\r\n          {({ authenticated, handler }) => {\r\n            let loginClass = authenticated ? 'Red' : 'Green';\r\n            return (\r\n              <FancyButton onClick={handler} className={loginClass}>\r\n                Log {authenticated ? 'Out' : 'In'}\r\n              </FancyButton>\r\n            );\r\n          }}\r\n        </AuthContext.Consumer>\r\n      </div>\r\n    </Aux>\r\n  );\r\n};\r\n\r\nexport default React.memo(cockpit);\r\n","import React, { Component } from 'react';\r\n// import { Radium } from 'radium';\r\nimport styles from './Person.module.css';\r\nimport classLister from 'css-module-class-lister';\r\nimport PropTypes from 'prop-types';\r\nimport AuthContext from '../../AuthContext/AuthContext';\r\n\r\nconst classes = classLister(styles);\r\nclass Person extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log('[Person.js] Inside constructor', props);\r\n    this.inputElement = React.createRef();\r\n  }\r\n\r\n  // componentWillMount() {\r\n  //   console.log('[Person.js] Inside componentWillMount()');\r\n  // }\r\n\r\n  componentDidMount = () => {\r\n    console.log('[Person.js] Inside componentDidMount()');\r\n    this.props.position === 0 && this.focusInput();\r\n  };\r\n\r\n  focusInput = () => {\r\n    this.inputElement.current.focus();\r\n  };\r\n  // /* componentWillUnmount() {\r\n  //   console.log(\r\n  //     '[Person.js] Inside componentWillUnmount()',\r\n  //     `${this.props.name} is being removed`\r\n  //   );\r\n  // } */\r\n  componentDidUpdate = (nextProps, nextState, nextContext) => {\r\n    console.log(\r\n      '[UPDATE Person.js] Inside componentDidUpdate',\r\n      nextProps,\r\n      nextState,\r\n      nextContext\r\n    );\r\n    this.props.position === 0 && this.focusInput();\r\n  };\r\n\r\n  static contextType = AuthContext;\r\n\r\n  render() {\r\n    console.log('[Person.js] Inside render()');\r\n    return (\r\n      <div className={classes('Person')}>\r\n        <p onClick={this.props.clicked}>\r\n          I'm {this.props.name} and I am {this.props.age} years old!\r\n        </p>\r\n        {this.context.authenticated ? <p>I'm logged in!!!</p> : null}\r\n        <p>{this.props.children}</p>\r\n        <input\r\n          ref={this.inputElement}\r\n          type=\"text\"\r\n          onChange={this.props.changed}\r\n          value={this.props.name}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nPerson.propTypes = {\r\n  clicked: PropTypes.func,\r\n  changed: PropTypes.func,\r\n  name: PropTypes.string,\r\n  age: PropTypes.number,\r\n};\r\nexport default Person;\r\n","import React, { Component } from 'react';\r\nimport Person from './Person/Person';\r\n\r\nclass Persons extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // console.log('[Persons.js] Inside constructor', props);\r\n    this.personRef = React.createRef();\r\n  }\r\n\r\n  // componentWillMount() {\r\n  //   console.log('[Persons.js] Inside componentWillMount()');\r\n  // }\r\n\r\n  componentDidMount() {\r\n    console.log('[Persons.js] Inside componentDidMount()');\r\n    // this.personRef.current.focusInput();\r\n  }\r\n  // /* componentWillUnmount() {\r\n  //   console.log(\r\n  //     '[Persons.js] Inside componentWillUnmount()',\r\n  //     `All Persons are being removed`\r\n  //     );\r\n  //   } */\r\n  // componentWillReceiveProps(nextProps, nextContext) {\r\n  //   console.log(\r\n  //     '[UPDATE Persons.js] Inside componentReceiveProps',\r\n  //     nextProps,\r\n  //     nextContext\r\n  //   );\r\n  // }\r\n\r\n  // shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n  //   console.log(\r\n  //     '[UPDATE Persons.js] Inside shouldComponentUpdate',\r\n  //     nextProps,\r\n  //     nextState,\r\n  //     nextContext\r\n  //   );\r\n  //   return (\r\n  //     this.props.persons !== nextProps.persons ||\r\n  //     this.props.clicked !== nextProps.clicked ||\r\n  //     this.props.changed !== nextProps.changed\r\n  //   );\r\n  // }\r\n  // componentWillUpdate(nextProps, nextState, nextContext) {\r\n  //   console.log(\r\n  //     '[UPDATE Persons.js] Inside componentWillUpdate',\r\n  //     nextProps,\r\n  //     nextState,\r\n  //     nextContext\r\n  //   );\r\n  // }\r\n  // componentDidUpdate(nextProps, nextState, nextContext) {\r\n  //   console.log(\r\n  //     '[UPDATE Persons.js] Inside componentDidUpdate',\r\n  //     nextProps,\r\n  //     nextState,\r\n  //     nextContext\r\n  //   );\r\n  // }\r\n  render() {\r\n    console.log('[Persons.js] Inside render()');\r\n    return this.props.persons.map((person, index) => (\r\n      <Person\r\n        ref={this.personRef}\r\n        clicked={() => this.props.clicked(index)}\r\n        name={person.name}\r\n        age={person.age}\r\n        key={person.id}\r\n        position={index}\r\n        changed={evt => this.props.changed(evt, person.id)}\r\n      >\r\n        {this.props.children}\r\n      </Person>\r\n    ));\r\n  }\r\n}\r\n\r\nexport default Persons;\r\n","import React, { PureComponent } from 'react';\nimport styles from './App.module.css';\nimport classLister from 'css-module-class-lister';\nimport Cockpit from '../components/Cockpit/Cockpit';\nimport Persons from '../components/Persons/Persons';\nimport AuthContext from '../components/AuthContext/AuthContext';\nimport FancyButton from '../components/FancyButton/FancyButton';\n\nconst classes = classLister(styles);\n\nclass App extends PureComponent {\n  // constructor(props) {\n  //   super(props);\n  //   console.log('[App.js] Inside constructor', props);\n  // }\n  state = {\n    persons: [\n      { id: 'gsfhgh', name: 'Max', age: 29 },\n      { id: 'sfgdshgh', name: 'Manu', age: 28 },\n      { id: 'rgjjyt', name: 'Stephanie', age: 26 },\n    ],\n    showPersons: false,\n    toggleClickedCount: 0,\n    isAuthenticated: false,\n  };\n\n  // componentWillMount() {\n  //   console.log('[App.js] Inside componentWillMount()');\n  // }\n\n  // componentDidMount() {\n  //   console.log('[App.js] Inside componentDidMount()');\n  // }\n\n  // componentWillReceiveProps(nextProps, nextContext) {\n  //   console.log(\n  //     '[UPDATE App.js] Inside componentReceiveProps',\n  //     nextProps,\n  //     nextContext\n  //   );\n  // }\n  // /* shouldComponentUpdate(nextProps, nextState, nextContext) {\n  //   console.log(\n  //     '[UPDATE App.js] Inside shouldComponentUpdate',\n  //     nextProps,\n  //     nextState,\n  //     nextContext\n  //   );\n  //   return (\n  //     this.state.persons !== nextState.persons ||\n  //     this.state.showPersons !== nextState.showPersons\n  //   );\n  // }// */\n  // componentWillUpdate(nextProps, nextState, nextContext) {\n  //   console.log(\n  //     '[UPDATE App.js] Inside componentWillUpdate',\n  //     nextProps,\n  //     nextState,\n  //     nextContext\n  //   );\n  // }\n  // componentDidUpdate(nextProps, nextState, nextContext) {\n  //   console.log(\n  //     '[UPDATE App.js] Inside componentDidUpdate',\n  //     nextProps,\n  //     nextState,\n  //     nextContext\n  //   );\n  // }\n\n  nameChangedHandler = (evt, id) => {\n    const personIndex = this.state.persons.findIndex(p => p.id === id);\n    const person = {\n      ...this.state.persons[personIndex],\n    };\n    person.name = evt.target.value;\n    const newPersons = [\n      ...this.state.persons.slice(0, personIndex),\n      person,\n      ...this.state.persons.slice(personIndex + 1),\n    ];\n    this.setState({\n      persons: newPersons,\n    });\n  };\n\n  toggleShowPersons = () => {\n    this.setState((prevState, props) => ({\n      showPersons: !prevState.showPersons,\n      toggleClickedCount: prevState.toggleClickedCount + 1,\n    }));\n  };\n\n  deletePersonHandler = personIndex => {\n    const { persons } = this.state;\n    const newPersons = [\n      ...persons.slice(0, personIndex),\n      ...persons.slice(personIndex + 1),\n    ];\n    this.setState({\n      persons: newPersons,\n    });\n  };\n\n  toggleLoginHandler = () => {\n    this.setState(prevState => ({\n      isAuthenticated: !prevState.isAuthenticated,\n    }));\n  };\n\n  render() {\n    console.log('[App.js] Inside render()');\n    let persons = null;\n    if (this.state.showPersons) {\n      persons = (\n        <Persons\n          persons={this.state.persons}\n          clicked={this.deletePersonHandler}\n          changed={this.nameChangedHandler}\n        />\n      );\n    }\n    return (\n      <div className={classes('App', 'D-flex-c')}>\n        <FancyButton onClick={() => this.setState({ showPersons: true })}>\n          Show Persons\n        </FancyButton>\n        <AuthContext.Provider\n          value={{\n            authenticated: this.state.isAuthenticated,\n            handler: this.toggleLoginHandler,\n          }}\n        >\n          <Cockpit\n            title={this.props.title}\n            toggleShowPersons={this.toggleShowPersons}\n            persons={this.state.persons}\n            showPersons={this.state.showPersons}\n          />\n          {persons}\n        </AuthContext.Provider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App title=\"Relevant People\" />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}